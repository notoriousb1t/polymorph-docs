(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{287:function(t,e,a){"use strict";a.r(e);var s=a(14),n=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"api-reference"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#api-reference"}},[t._v("#")]),t._v(" API Reference")]),t._v(" "),e("h2",{attrs:{id:"interpolate-paths-options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#interpolate-paths-options"}},[t._v("#")]),t._v(" interpolate(paths, options)")]),t._v(" "),e("p",[t._v("Returns a function that interpolates between two or more paths.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// create function to interpolate between the two paths")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" interpolator "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" polymorph"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("interpolate")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#play'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#pause'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("addPoints")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("origin")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("x")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("y")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("optimize")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fill'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("precision")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// pass a number between 0 and 1. 0.5 is 50% in the middle.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" midway "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("interpolator")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"paths"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#paths"}},[t._v("#")]),t._v(" paths")]),t._v(" "),e("p",[t._v("An array of path data.  Each item can be a PathElement, a CSS selector, or a path string ('M0,0 ...')")]),t._v(" "),e("h3",{attrs:{id:"options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[t._v("#")]),t._v(" options")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Name")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("addPoints")]),t._v(" "),e("td",[t._v("Adds additional points to each side of the tween over what is required.  This takes effect when optimize is set to "),e("code",[t._v("fill")]),t._v(".  The default value is "),e("code",[t._v("0")]),t._v(".")])]),t._v(" "),e("tr",[e("td",[t._v("origin")]),t._v(" "),e("td",[t._v("There are two modes to origin: absolute and relative. When absolute is true, "),e("code",[t._v("x")]),t._v(" and "),e("code",[t._v("y")]),t._v(" are exact coordinates in the SVG space.  When absolute is false, "),e("code",[t._v("x")]),t._v(" and "),e("code",[t._v("y")]),t._v(" are values between "),e("code",[t._v("0")]),t._v(" and "),e("code",[t._v("1")]),t._v(" representing 0% to 100% of the bounding box of the path. This is similar to transform-origin in CSS.  The default value is "),e("code",[t._v("{ x: 0, y: 0, absolute: false }")]),t._v(" (upper left corner of the bounding box of the path)")])]),t._v(" "),e("tr",[e("td",[t._v("optimize")]),t._v(" "),e("td",[t._v("Determines the strategy for aligning two disparate shapes. "),e("code",[t._v("none")]),t._v(" does nothing and should be used when the paths are optimized by hand.  "),e("code",[t._v("fill")]),t._v(" creates new subpaths as needed and inserts additional points as needed.  The default value is "),e("code",[t._v("fill")]),t._v(".")])]),t._v(" "),e("tr",[e("td",[t._v("precision")]),t._v(" "),e("td",[t._v("The number of decimal places to use when rendering paths.  Increasing this value smooths out shapes at the cost of browser rendering speed on some platforms.  The default value is "),e("code",[t._v("0")])])])])])])}),[],!1,null,null,null);e.default=n.exports}}]);